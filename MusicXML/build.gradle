/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.3/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'application'
    id "org.openjfx.javafxplugin" version "0.0.9"
}

repositories {
    // Use jcenter for resolving dependencies.
    jcenter()
    mavenCentral()
}

dependencies {
	// Use JUnit test framework
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    testCompile "org.testfx:testfx-core:4.0.16-alpha"
    testCompile "org.testfx:testfx-junit5:4.0.16-alpha"
    testCompile group: 'org.hamcrest', name: 'hamcrest', version: '2.1'
	implementation group: 'com.jfoenix', name: 'jfoenix', version: '9.0.10'
}

test {
	useJUnitPlatform()
	testLogging {
		events 'passed', 'skipped', 'failed'
	}
}

javafx {
	version = "15.0.1"
	modules = [ 'javafx.controls', 'javafx.fxml' ]
}

run {
	if (javafx.platform.classifier == 'win') {
		systemProperty "java.library.path", "C:\tmp" 
	}
}

sourceSets {
 	main {
    	resources {
       		srcDirs = ["src/main/java"]
        	includes = ["**/*.fxml"]
    	}
  	}
}

mainClassName = 'MusicXML.Launcher'

task debug {
    group = "application"
    description = "Runs this project in debug mode on port 2311"
	doFirst {
		application {
    		applicationDefaultJvmArgs = ['-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=2311']
		}
	}
}

debug.finalizedBy run